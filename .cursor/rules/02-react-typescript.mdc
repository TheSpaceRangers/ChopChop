---
globs: *.ts,*.tsx
description: Conventions React + TypeScript pour composants et hooks
---

# React + TypeScript

- Composants en PascalCase, hooks en camelCase avec préfixe `use`.
- Préférer les exports nommés, éviter les exports par défaut quand possible.
- Typer systématiquement les `Props` et APIs publiques. Eviter `any`.
- Utiliser des fonctions composants, pas de classes.
- Écrire des composants petits et orientés responsabilité unique.
- Extraire la logique dans des hooks dédiés; garder les composants déclaratifs.

## Nommage & fichiers

- Fichiers: `PascalCase.tsx` pour composants, `camelCase.ts` sinon.
- Types: suffixes `Type`/`Props` (ex: `ItemType`, `ButtonProps`).

## Bonnes pratiques

- Gérer d'abord les cas d'erreur/edge cases, retourner tôt.
- Eviter la mutation; préférer l'immuabilité et les fonctions pures.
- Eviter l'imbrication profonde (>2–3 niveaux); factoriser.
- Respecter l'accessibilité (labels, rôles ARIA, navigation clavier).
